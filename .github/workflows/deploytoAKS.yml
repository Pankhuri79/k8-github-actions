name: Deploy to AKS

on:
  push:
    branches:
      - main

env:
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Build and push Docker image
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} docker.io
          docker build -t $DOCKER_IMAGE_NAME .
          docker tag $DOCKER_IMAGE_NAME docker.io/$DOCKER_IMAGE_NAME
          docker push docker.io/$DOCKER_IMAGE_NAME

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: k8/

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set release version
        id: set_version
        run: |
          echo ::set-output name=VERSION::$(echo "${GITHUB_REF/refs\/tags\//}")

      - name: Upload release artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ./k8

  deploy:
    needs: release
    runs-on: ubuntu-latest

    steps:
      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

      - name: Azure CLI Login
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Set subscription
        run: az account set --subscription ${{ env.AZURE_SUBSCRIPTION_ID }}

      - name: Download release artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-artifacts

      - name: Deploy to AKS
        run: |
          az aks get-credentials --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }}
          kubectl apply -f deployment.yaml
          kubectl apply -f svc.yaml

      - name: Upload deployment artifacts
        uses: actions/upload-artifact@v2
        with:
          name: build-artifacts
          path: ./k8
